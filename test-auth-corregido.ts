// ==================== TESTING SIMPLE PARA AUTH CORREGIDO ====================

import { loginUsuario, registrarUsuario, diagnosticarFirebase, obtenerUsuarioActual } from './auth-corregido';

// ==================== FUNCI√ìN DE TESTING COMPLETA ====================

export const probarSistemaCompleto = async () => {
  console.log('üß™ ========== PROBANDO SISTEMA CORREGIDO ==========\n');

  // PASO 1: Diagn√≥stico de Firebase
  console.log('PASO 1: Diagn√≥stico de Firebase');
  await diagnosticarFirebase();

  // PASO 2: Crear usuario de prueba
  console.log('\nPASO 2: Crear usuario de prueba');
  const timestamp = Date.now();
  const testEmail = `test${timestamp}@correo.com`;
  const testPassword = 'Test123456';
  const testName = 'Usuario Prueba';

  console.log(`üìß Email: ${testEmail}`);
  console.log(`üîë Password: ${testPassword}`);
  console.log(`üë§ Nombre: ${testName}`);

  const registro = await registrarUsuario(testName, testEmail, testPassword, 'role_student');

  if (registro.success) {
    console.log('‚úÖ REGISTRO EXITOSO!');
    console.log('üë§ Usuario:', registro.user);
    console.log('üé´ Token:', registro.token ? 'Obtenido' : 'No obtenido');
    console.log('üí¨ Mensaje:', registro.message);

    // PASO 3: Cerrar sesi√≥n y probar login
    console.log('\nPASO 3: Probar login con el usuario creado');
    
    const login = await loginUsuario(testEmail, testPassword);

    if (login.success) {
      console.log('‚úÖ LOGIN EXITOSO!');
      console.log('üë§ Usuario:', login.user);
      console.log('üé´ Token:', login.token ? 'Obtenido' : 'No obtenido');
      console.log('üí¨ Mensaje:', login.message);

      // PASO 4: Probar login con credenciales incorrectas
      console.log('\nPASO 4: Probar login con credenciales incorrectas');
      const loginIncorrecto = await loginUsuario(testEmail, 'passwordIncorrecto');

      if (!loginIncorrecto.success) {
        console.log('‚úÖ LOGIN INCORRECTO RECHAZADO CORRECTAMENTE');
        console.log('‚ùå Error:', loginIncorrecto.errorMessage);
      } else {
        console.log('‚ùå PROBLEMA: Login incorrecto fue aceptado');
      }

      // PASO 5: Verificar usuario actual
      console.log('\nPASO 5: Verificar usuario actual');
      const usuarioActual = obtenerUsuarioActual();
      if (usuarioActual) {
        console.log('‚úÖ Usuario autenticado:', usuarioActual.email);
        console.log('üÜî UID:', usuarioActual.uid);
        console.log('üë§ Nombre:', usuarioActual.displayName);
      } else {
        console.log('‚ùå No hay usuario autenticado');
      }

      console.log('\nüéâ ========== TODAS LAS PRUEBAS COMPLETADAS ==========');
      console.log('‚úÖ Tu sistema de autenticaci√≥n est√° funcionando correctamente!');
      console.log('\nüìù CREDENCIALES DE PRUEBA:');
      console.log(`Email: ${testEmail}`);
      console.log(`Password: ${testPassword}`);

    } else {
      console.log('‚ùå LOGIN FALL√ì:');
      console.log('Error:', login.errorMessage);
      console.log('C√≥digo:', login.errorCode);
    }

  } else {
    console.log('‚ùå REGISTRO FALL√ì:');
    console.log('Error:', registro.errorMessage);
    console.log('C√≥digo:', registro.errorCode);
  }
};

// ==================== FUNCIONES INDIVIDUALES ====================

export const probarSoloRegistro = async () => {
  console.log('üìù Probando solo registro...');
  
  const timestamp = Date.now();
  const resultado = await registrarUsuario(
    'Usuario Test',
    `test${timestamp}@prueba.com`,
    'Test123456',
    'role_student'
  );

  if (resultado.success) {
    console.log('‚úÖ Registro exitoso:', resultado.user);
    return resultado;
  } else {
    console.log('‚ùå Registro fall√≥:', resultado.errorMessage);
    return resultado;
  }
};

export const probarSoloLogin = async (email: string, password: string) => {
  console.log(`üîê Probando login: ${email}`);
  
  const resultado = await loginUsuario(email, password);

  if (resultado.success) {
    console.log('‚úÖ Login exitoso:', resultado.user);
    return resultado;
  } else {
    console.log('‚ùå Login fall√≥:', resultado.errorMessage);
    return resultado;
  }
};

export const probarDiagnostico = async () => {
  console.log('üîç Ejecutando diagn√≥stico...');
  await diagnosticarFirebase();
};

// ==================== EXPORTACI√ìN F√ÅCIL ====================

export const testAuth = {
  todo: probarSistemaCompleto,
  registro: probarSoloRegistro,
  login: probarSoloLogin,
  diagnostico: probarDiagnostico
};

// ==================== INSTRUCCIONES ====================

if (__DEV__) {
  console.log('üß™ TESTING AUTH CORREGIDO CARGADO');
  console.log('Para usar:');
  console.log('1. testAuth.todo() - Prueba completa');
  console.log('2. testAuth.registro() - Solo registro');
  console.log('3. testAuth.login(email, pass) - Solo login');
  console.log('4. testAuth.diagnostico() - Diagn√≥stico Firebase');
}